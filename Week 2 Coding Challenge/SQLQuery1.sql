CREATE TABLE PRODUCTS(
ID INT PRIMARY KEY IDENTITY NOT NULL,
NAME NVARCHAR(35),
PRICE MONEY
);

CREATE TABLE CUSTOMERS(
ID INT PRIMARY KEY IDENTITY NOT NULL,
FirstName NVARCHAR(35) NOT NULL,
LastName NVARCHAR(35) NOT NULL,
CardNumber CHAR(16) NOT NULL
);

CREATE TABLE ORDERS(
ID INT PRIMARY KEY IDENTITY NOT NULL,
PRODUCTID INT NOT NULL
	CONSTRAINT FK_PRODUCTS_ID
	REFERENCES PRODUCTS (ID),
CUSTOMERID INT NOT NULL
	CONSTRAINT FK_CUSTOMERS_ID
	REFERENCES CUSTOMERS (ID)
	);

INSERT INTO CUSTOMERS (FirstName, LastName, CardNumber)
Values ('Harold', 'Altamirano', 1234567891234567);

INSERT INTO CUSTOMERS (FirstName, LastName, CardNumber)
Values ('Jon', 'Doe', 1234567891234567);

INSERT INTO CUSTOMERS (FirstName, LastName, CardNumber)
Values ('Jane', 'Doe', 1234567891234567);

INSERT INTO PRODUCTS(NAME, PRICE)
VALUES ('TV', 300.00);

INSERT INTO PRODUCTS(NAME, PRICE)
VALUES ('Chair', 1999.99);

INSERT INTO PRODUCTS(NAME, PRICE)
VALUES ('Table', 519.00);

INSERT INTO ORDERS(PRODUCTID, CUSTOMERID)
VALUES (1, 1)

INSERT INTO ORDERS(PRODUCTID, CUSTOMERID)
VALUES (2, 2)

INSERT INTO ORDERS(PRODUCTID, CUSTOMERID)
VALUES (2, 3)

-- iphone
INSERT INTO PRODUCTS(NAME, PRICE)
VALUES ('iPhone', 200)

--add customer Tina
INSERT INTO CUSTOMERS(FirstName, LastName, CardNumber)
VALUES ('Tina', 'Smith', 1111222233334444)

SELECT * FROM CUSTOMERS;
-- Tina is customer id 4
SELECT * FROM PRODUCTS;
-- iPhone is product id 4
--create order for Tina Smith bought iPhone
INSERT INTO ORDERS(PRODUCTID, CUSTOMERID)
VALUES (4,4)



-- all orders by Tina Smith
SELECT *
FROM ORDERS INNER JOIN CUSTOMERS ON CUSTOMERS.ID = CUSTOMERID 
LEFT JOIN PRODUCTS ON PRODUCTID = PRODUCTS.ID
WHERE FirstName = 'Tina' AND LastName = 'Smith'

-- all revenue from iPhone sales
SELECT SUM(Price)
FROM PRODUCTS FULL JOIN ORDERS ON PRODUCTS.ID = ORDERS.PRODUCTID
WHERE PRODUCTS.NAME = 'iPhone'

-- increase iphone price to 250
UPDATE PRODUCTS
SET PRICE = 250
WHERE NAME = 'iPhone';





